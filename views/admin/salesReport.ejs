<!-- views/admin/salesReport.ejs -->
<%- include("../partial/adminHeader") %>

<style>
    .pagination {
        display: flex;
        justify-content: center;
    }

    .active {
        color: #fff;
    }

    .btn:hover {
        background-color: #ddd;
    }

    .table-spacing th,
    .table-spacing td {
        padding-left: 80px;
    }
</style>

<div class="content-header row">
    <div class="d-flex justify-content-between align-items-center">
        <h2 class="content-title card-title">Sales Report</h2>
    </div>
</div>

<div class="card mb-4">
    <header class="card-header">
        <div class="row gx-3">
            <div class="col-lg-2 col-6 col-md-3">
                <select class="form-select" onchange="location.href='/admin/salesReport?day=' + this.value">
                    <% if (locals.salesToday) { %>
                        <option value="salesToday" selected>salesToday</option>
                        <option value="salesWeekly">salesWeekly</option>
                        <option value="salesMonthly">salesMonthly</option>
                        <option value="salesYearly">salesYearly</option>
                    <% } else if (locals.salesWeekly) { %>
                        <option value="salesWeekly" selected>salesWeekly</option>
                        <option value="salesToday">salesToday</option>
                        <option value="salesMonthly">salesMonthly</option>
                        <option value="salesYearly">salesYearly</option>
                    <% } else if (locals.salesMonthly) { %>
                        <option value="salesMonthly" selected>salesMonthly</option>
                        <option value="salesToday">salesToday</option>
                        <option value="salesWeekly">salesWeekly</option>
                        <option value="salesYearly">salesYearly</option>
                    <% } else if (locals.salesYearly) { %>
                        <option value="salesYearly" selected>salesYearly</option>
                        <option value="salesToday">salesToday</option>
                        <option value="salesWeekly">salesWeekly</option>
                        <option value="salesMonthly">salesMonthly</option>
                    <% } %>
                </select>
            </div>
            <div class="col-md-2 col-6">
                <input type="date" id="selectedDate" class="form-control" value="<%= locals.date ? date : '' %>" onchange="dateWiseFilter()">
            </div>
            <div class="col-lg-6 col-md-6 ms-auto text-md-end">
                <a href="#" id="createSalesReport" class="btn btn-primary mb-2">Generate PDF</a>
                <a href="#" id="downloadExcelReport" class="btn btn-success mb-2">Download Excel</a>
            </div>
        </div>
    </header>
</div>

<div class="right mt-5 container">
    <table id="salesTable" class="table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>Data ID</th>
                <th>Name</th>
                <th>Product</th>
                <th>Date</th>
                <th>Payment</th>
                <th>Status</th>
                <th>Total Price</th>
                
            </tr>
        </thead>
        <tbody>
            <% for (let i = 0; i < data.length; i++) { %>
                <tr>
                    <td><%= i + 1 %></td>
                    <td><%= data[i]._id %></td>
                    <td><%=data[i].address[0].name %></td>
                    <td><%= data[i].product[0].name || data[i].product.name %></td>
                    <td><%= data[i].createdOn.toLocaleString('en-IN') %></td>
                    <td><%= data[i].payment %></td>
                    <td><%= data[i].status %></td>
                    <td><%= data[i].totalPrice %></td>
                 
                </tr>
            <% } %>
        </tbody>
    </table>

    <% if (totalPages) { %>
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <button class="btn btn-sm"><a href="?page=<%= currentPage - 1 %>">Previous</a></button>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <button class="btn btn-sm <%= i === currentPage ? 'active' : '' %>">
                    <a href="?page=<%= i %>"><%= i %></a>
                </button>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <button class="btn btn-sm"><a href="?page=<%= currentPage + 1 %>">Next</a></button>
            <% } %>
        </div>
    <% } %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <script>
        function dateWiseFilter() {
            const selectedDate = document.getElementById("selectedDate").value;
            console.log("selected date:", selectedDate);
            window.location.href = `/admin/dateWiseFilter?date=${selectedDate}`;
        }
    
        document.getElementById('createSalesReport').addEventListener('click', async (event) => {
            event.preventDefault();
            const salesTable = document.getElementById('salesTable');
            const tableBody = salesTable.querySelector('tbody');
            const salesData = [];
            for (const row of tableBody.rows) {
                const dataId = row.cells[1].textContent;
                const name = row.cells[2].textContent;
                const dateFull = row.cells[4].textContent;
                const dateOnly = dateFull.split(',')[0].trim();
                const payment = row.cells[5].textContent;
                const status = row.cells[6].textContent;
                let totalAmount = row.cells[7].textContent.trim();
                totalAmount = parseFloat(totalAmount.replace(/[^0-9]/g, ''), 10);
                const offerPrice = row.cells[8].textContent.trim();
                const coupon = row.cells[9].textContent.trim();
                const dataData = {
                    dataId,
                    name,
                    date: dateOnly,
                    payment,
                    status,
                    totalAmount,
                    offerPrice,
                    coupon
                };
                salesData.push(dataData);
            }
            try {
                const response = await fetch('/admin/generatePdf', {
                    method: 'post',
                    headers: {
                        "Content-Type": 'application/json'
                    },
                    body: JSON.stringify(salesData)
                });
                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'report.pdf';
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                } else {
                    console.error('Failed to generate PDF');
                }
            } catch (error) {
                console.log(error.message);
            }
        });
    
        document.getElementById('downloadExcelReport').addEventListener('click', async (event) => {
            event.preventDefault();
            const salesTable = document.getElementById('salesTable');
            const tableBody = salesTable.querySelector('tbody');
            const salesData = [];
            for (const row of tableBody.rows) {
                const dataId = row.cells[1].textContent;
                const name = row.cells[2].textContent;
                const dateFull = row.cells[4].textContent;
                const dateOnly = dateFull.split(',')[0].trim();
                const payment = row.cells[5].textContent;
                const status = row.cells[6].textContent;
                let totalAmount = row.cells[7].textContent.trim();
                totalAmount = parseFloat(totalAmount.replace(/[^0-9]/g, ''), 10);
                const offerPrice = row.cells[8].textContent.trim();
                const coupon = row.cells[9].textContent.trim();
                const dataData = {
                    dataId,
                    name,
                    date: dateOnly,
                    payment,
                    status,
                    totalAmount,
                    offerPrice,
                    coupon
                };
                salesData.push(dataData);
            }
            try {
                const response = await fetch('/admin/downloadExcel', {
                    method: 'post',
                    headers: {
                        "Content-Type": 'application/json'
                    },
                    body: JSON.stringify(salesData)
                });
                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'report.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                } else {
                    console.error('Failed to download Excel');
                }
            } catch (error) {
                console.log(error.message);
            }
        });
    </script>